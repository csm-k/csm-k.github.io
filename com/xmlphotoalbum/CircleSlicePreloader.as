package com.xmlphotoalbum{	import flash.events.TimerEvent;	import flash.events.Event;	import flash.display.Sprite;	import flash.display.Shape;	import flash.utils.Timer;		public class CircleSlicePreloader extends Sprite	{		private var Circletimer:Timer;		private var slices:int;		private var radius:int;		private var loaderX:Number;		private var loaderY:Number;				public function CircleSlicePreloader(loaderX:Number, loaderY:Number, slices:int, radius:int)		{			super();			this.slices = slices;			this.radius = radius;			this.x = loaderX;			this.y = loaderY;			draw();			addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);		}		private function onAddedToStage(event:Event):void		{			removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			addEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);			Circletimer = new Timer(25);			Circletimer.addEventListener(TimerEvent.TIMER, onTimer, false, 0, true);			Circletimer.start();		}		private function onRemovedFromStage(event:Event):void		{			removeEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);			addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			Circletimer.reset();			Circletimer.removeEventListener(TimerEvent.TIMER, onTimer);			Circletimer = null;		}		private function onTimer(event:TimerEvent):void 		{			rotation = (rotation + (360 / slices)) % 360;		}		private function draw():void		{			var i:int = slices;			var degrees:int = 360 / slices;			while (i--)			{				var slice:Shape = getSlice();				slice.alpha = Math.max(0.2, 1 - (0.1 * i));				var radianAngle:Number = (degrees * i) * Math.PI / 180;				slice.rotation = -degrees * i;				slice.x = Math.sin(radianAngle) * radius;				slice.y = Math.cos(radianAngle) * radius;				addChild(slice);			}		}		private function getSlice():Shape		{			var slice:Shape = new Shape();			slice.graphics.beginFill(0x666666);			slice.graphics.drawCircle(-8, 0, 1);			slice.graphics.endFill();			return slice;		}	}}